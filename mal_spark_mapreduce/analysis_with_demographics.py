from pyspark.sql import SparkSession
from pyspark.sql.functions import avg, count

# ============================================
# 1Ô∏è‚É£ Kh·ªüi t·∫°o SparkSession
# ============================================
spark = SparkSession.builder \
    .appName("AnimeStudioFavoritesWithDemographics") \
    .getOrCreate()

# ============================================
# 2Ô∏è‚É£ ƒê·ªçc file CSV t·ª´ HDFS (chu·∫©n ƒë·ªãnh d·∫°ng tab v√† quote)
# ============================================
df = spark.read \
    .option("inferSchema", "true") \
    .option("header", "false") \
    .option("sep", "\t") \
    .option("quote", '"') \
    .csv("hdfs:///user/hive/warehouse/mal_anime/part-m-00000")

# ============================================
# 3Ô∏è‚É£ G√°n t√™n c·ªôt ph√π h·ª£p
# ============================================
df = df.toDF(
    "mal_id", "title", "approved", "type", "episodes", "year", "season",
    "status", "score", "scored_by", "rank", "popularity",
    "members", "favorites", "genres", "studios", "demographics", "url"
)

# ============================================
# 4Ô∏è‚É£ T√≠nh trung b√¨nh favorites theo studio
# ============================================
favorites_by_studio = df.groupBy("studios").agg(
    avg("favorites").alias("avg_favorites")
).orderBy("avg_favorites", ascending=False)

print("=== üé¨ Trung b√¨nh Favorites theo Studio ===")
favorites_by_studio.show(10, truncate=False)

# ============================================
# 5Ô∏è‚É£ T√≠nh s·ªë l∆∞·ª£ng anime theo demographics (Shounen, Seinen, Josei, Shoujo, ...)
# ============================================
demographic_count = df.groupBy("demographics").agg(
    count("*").alias("anime_count")
).orderBy("anime_count", ascending=False)

print("=== üìä S·ªë l∆∞·ª£ng Anime theo Demographics ===")
demographic_count.show(10, truncate=False)

# ============================================
# 6Ô∏è‚É£ Ghi k·∫øt qu·∫£ ra HDFS
# ============================================
favorites_by_studio.write \
    .option("header", "true") \
    .mode("overwrite") \
    .csv("hdfs:///user/hive/warehouse/output/studio_avg_favorites")

demographic_count.write \
    .option("header", "true") \
    .mode("overwrite") \
    .csv("hdfs:///user/hive/warehouse/output/demographics_count")

# ============================================
# 7Ô∏è‚É£ D·ª´ng SparkSession
# ============================================
spark.stop()

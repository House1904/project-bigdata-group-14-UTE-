from pyspark.sql import SparkSession
from pyspark.sql.functions import avg, split, explode, count

# ============================================
# 1Ô∏è‚É£ Kh·ªüi t·∫°o SparkSession
# ============================================
spark = SparkSession.builder \
    .appName("AnimeAnalysis") \
    .getOrCreate()

# ============================================
# 2Ô∏è‚É£ ƒê·ªçc file CSV t·ª´ HDFS (ƒë·ªãnh d·∫°ng tab v√† quote)
# ============================================
df = spark.read \
    .option("inferSchema", "true") \
    .option("header", "false") \
    .option("sep", "\t") \
    .option("quote", '"') \
    .csv("hdfs:///user/hive/warehouse/mal_anime/part-m-00000")

# ============================================
# 3Ô∏è‚É£ G√°n t√™n c·ªôt ph√π h·ª£p
# ============================================
df = df.toDF(
    "mal_id", "title", "approved", "type", "episodes", "year", "season",
    "status", "score", "scored_by", "rank", "popularity",
    "members", "favorites", "genres", "studios", "demographics", "url"
)

# ============================================
# 4Ô∏è‚É£ T√≠nh trung b√¨nh ƒëi·ªÉm (score) theo tr·∫°ng th√°i ph√°t h√†nh (status)
# ============================================
avg_score_by_status = df.groupBy("status").agg(
    avg("score").alias("avg_score")
).orderBy("avg_score", ascending=False)

print("=== üé¨ Trung b√¨nh ƒëi·ªÉm theo tr·∫°ng th√°i (Status) ===")
avg_score_by_status.show(10, truncate=False)

# ============================================
# 5Ô∏è‚É£ Ph√¢n t√≠ch theo th·ªÉ lo·∫°i (genre)
# ============================================
# T√°ch danh s√°ch genre (vd: "Action, Drama, Sci-Fi") th√†nh t·ª´ng d√≤ng
df_genre = df.withColumn("genre", explode(split(df["genres"], ", ")))

# T√≠nh trung b√¨nh score, favorites, v√† s·ªë l∆∞·ª£ng anime theo t·ª´ng genre
genre_analysis = df_genre.groupBy("genre").agg(
    avg("score").alias("avg_score"),
    avg("favorites").alias("avg_favorites"),
    count("*").alias("anime_count")
).orderBy("avg_score", ascending=False)

print("=== üìä Ph√¢n t√≠ch theo Th·ªÉ lo·∫°i (Genre Analysis) ===")
genre_analysis.show(10, truncate=False)

# ============================================
# 6Ô∏è‚É£ L∆∞u k·∫øt qu·∫£ ra HDFS
# ============================================
avg_score_by_status.write \
    .option("header", "true") \
    .mode("overwrite") \
    .csv("hdfs:///user/hive/warehouse/output/status_avg_score")

genre_analysis.write \
    .option("header", "true") \
    .mode("overwrite") \
    .csv("hdfs:///user/hive/warehouse/output/genre_analysis")

# ============================================
# 7Ô∏è‚É£ D·ª´ng Spark
# ============================================
spark.stop()

from pyspark.sql import SparkSession
from pyspark.sql.functions import col, row_number
from pyspark.sql.window import Window

# ============================================
# 1Ô∏è‚É£ Kh·ªüi t·∫°o SparkSession
# ============================================
spark = SparkSession.builder \
    .appName("TopAnimeByFormat") \
    .getOrCreate()

# ============================================
# 2Ô∏è‚É£ ƒê·ªçc d·ªØ li·ªáu t·ª´ HDFS (chu·∫©n ƒë·ªãnh d·∫°ng tab v√† quote)
# ============================================
input_path = "hdfs:///user/hive/warehouse/anl_anime/part-m-00000"

df = spark.read \
    .option("header", "false") \
    .option("inferSchema", "true") \
    .option("sep", "\t") \
    .option("quote", '"') \
    .csv(input_path)

# ============================================
# 3Ô∏è‚É£ G√°n t√™n c·ªôt (theo c·∫•u tr√∫c b·∫£ng AniList)
# ============================================
df = df.toDF(
    "id", "title_romaji", "title_english", "title_native", "format", "episodes",
    "duration", "source", "country", "isAdult", "score", "meanScore", "popularity",
    "favourites", "trending", "genres", "tags", "status", "studio", "season",
    "start_year", "url"
)

# ============================================
# 4Ô∏è‚É£ L·ªçc d·ªØ li·ªáu h·ª£p l·ªá (format v√† popularity c√≥ gi√° tr·ªã)
# ============================================
df_clean = df.filter(
    (col("format").isNotNull()) &
    (col("popularity").isNotNull()) &
    (col("format") != "\\N") &
    (col("format") != "")
)

# ============================================
# 5Ô∏è‚É£ T·∫°o window ƒë·ªÉ x·∫øp h·∫°ng theo popularity trong t·ª´ng format
# ============================================
windowSpec = Window.partitionBy("format").orderBy(col("popularity").desc())

# ============================================
# 6Ô∏è‚É£ G√°n th·ª© h·∫°ng v√† l·∫•y top 5 m·ªói format
# ============================================
df_ranked = df_clean.withColumn("rank", row_number().over(windowSpec))
top5_per_format = df_ranked.filter(col("rank") <= 5)

# ============================================
# 7Ô∏è‚É£ Ch·ªçn c·ªôt c·∫ßn thi·∫øt
# ============================================
result = top5_per_format.select(
    "format", "rank", "title_romaji", "popularity"
).orderBy("format", "rank")

# ============================================
# 8Ô∏è‚É£ Ghi k·∫øt qu·∫£ ra HDFS
# ============================================
output_path = "hdfs:///user/hive/warehouse/output/top_anime_by_format"

result.write \
    .mode("overwrite") \
    .option("header", "true") \
    .csv(output_path)

# ============================================
# 9Ô∏è‚É£ Hi·ªÉn th·ªã k·∫øt qu·∫£ ki·ªÉm tra
# ============================================
print("=== üèÜ Top 5 Anime ph·ªï bi·∫øn nh·∫•t theo t·ª´ng Format ===")
result.show(20, truncate=False)

# ============================================
# üîü D·ª´ng SparkSession
# ============================================
spark.stop()
